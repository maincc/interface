diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js
index 3b1efd9..773d3d3 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js
@@ -5,6 +5,8 @@ import _ from 'lodash';
 import { IERC20Metadata__factory } from '../types/v3/factories/IERC20Metadata__factory';
 import { log, WRAPPED_NATIVE_CURRENCY } from '../util';
 // Some well known tokens on each chain for seeding cache / testing.
+export const CCDAO_MAINNET = new Token(ChainId.MAINNET, '0x1487Bd704Fa05A222B0aDB50dc420f001f003045', 18, 'CCDAO', 'Cross Chain DAO');
+export const CCDAO_POLYGON = new Token(ChainId.POLYGON, '0xee546f831533a913848b72f36a9d5e437f63dbb9', 18, 'CCDAO', 'Cross Chain DAO');
 export const USDC_MAINNET = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD//C');
 export const USDT_MAINNET = new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD');
 export const WBTC_MAINNET = new Token(ChainId.MAINNET, '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', 8, 'WBTC', 'Wrapped BTC');
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-subgraph-provider.js
index f963e1b..e01a686 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-subgraph-provider.js
@@ -22,7 +22,8 @@ export class CachingV2SubgraphProvider {
         if (cachedPools) {
             return cachedPools;
         }
-        const pools = await this.subgraphProvider.getPools();
+        // const pools = await this.subgraphProvider.getPools();
+        const pools = [];
         await this.cache.set(this.SUBGRAPH_KEY(this.chainId), pools);
         return pools;
     }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js
index 68d11d3..f8dec1f 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js
@@ -3,14 +3,15 @@ import { Pair } from '@uniswap/v2-sdk';
 import _ from 'lodash';
 import { WRAPPED_NATIVE_CURRENCY } from '../../util/chains';
 import { log } from '../../util/log';
-import { DAI_MAINNET, USDC_MAINNET, USDT_MAINNET, WBTC_MAINNET } from '../token-provider';
+import { CCDAO_MAINNET, CCDAO_POLYGON, DAI_MAINNET, USDC_MAINNET, USDT_MAINNET, WBTC_MAINNET } from '../token-provider';
 const BASES_TO_CHECK_TRADES_AGAINST = {
     [ChainId.MAINNET]: [
         WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET],
         DAI_MAINNET,
         USDC_MAINNET,
         USDT_MAINNET,
-        WBTC_MAINNET
+        WBTC_MAINNET,
+        CCDAO_MAINNET
     ],
     [ChainId.GOERLI]: [WRAPPED_NATIVE_CURRENCY[ChainId.GOERLI]],
     [ChainId.SEPOLIA]: [WRAPPED_NATIVE_CURRENCY[ChainId.SEPOLIA]],
@@ -19,7 +20,7 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
     [ChainId.ARBITRUM_ONE]: [],
     [ChainId.ARBITRUM_GOERLI]: [],
     [ChainId.OPTIMISM_GOERLI]: [],
-    [ChainId.POLYGON]: [],
+    [ChainId.POLYGON]: [CCDAO_POLYGON],
     [ChainId.POLYGON_MUMBAI]: [],
     [ChainId.CELO]: [],
     [ChainId.CELO_ALFAJORES]: [],
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-subgraph-provider.js
index f20cd07..a62af42 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-subgraph-provider.js
@@ -22,7 +22,8 @@ export class CachingV3SubgraphProvider {
         if (cachedPools) {
             return cachedPools;
         }
-        const pools = await this.subgraphProvider.getPools();
+        // const pools = await this.subgraphProvider.getPools();
+        const pools = [];
         await this.cache.set(this.SUBGRAPH_KEY(this.chainId), pools);
         return pools;
     }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js
index 26f8306..01b5a95 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js
@@ -6,14 +6,15 @@ import _ from 'lodash';
 import { unparseFeeAmount } from '../../util/amounts';
 import { WRAPPED_NATIVE_CURRENCY } from '../../util/chains';
 import { log } from '../../util/log';
-import { ARB_ARBITRUM, BTC_BNB, BUSD_BNB, CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_CELO, DAI_CELO_ALFAJORES, DAI_GOERLI, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISM_GOERLI, DAI_POLYGON_MUMBAI, ETH_BNB, OP_OPTIMISM, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_ETHEREUM_GNOSIS, USDC_GOERLI, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISM_GOERLI, USDC_POLYGON, USDC_SEPOLIA, USDT_ARBITRUM, USDT_BNB, USDT_GOERLI, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISM_GOERLI, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_GOERLI, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISM_GOERLI, WETH_POLYGON, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WXDAI_GNOSIS } from '../token-provider';
+import { CCDAO_MAINNET, CCDAO_POLYGON, ARB_ARBITRUM, BTC_BNB, BUSD_BNB, CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_CELO, DAI_CELO_ALFAJORES, DAI_GOERLI, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISM_GOERLI, DAI_POLYGON_MUMBAI, ETH_BNB, OP_OPTIMISM, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_ETHEREUM_GNOSIS, USDC_GOERLI, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISM_GOERLI, USDC_POLYGON, USDC_SEPOLIA, USDT_ARBITRUM, USDT_BNB, USDT_GOERLI, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISM_GOERLI, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_GOERLI, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISM_GOERLI, WETH_POLYGON, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WXDAI_GNOSIS } from '../token-provider';
 const BASES_TO_CHECK_TRADES_AGAINST = {
     [ChainId.MAINNET]: [
         WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET],
         DAI_MAINNET,
         USDC_MAINNET,
         USDT_MAINNET,
-        WBTC_MAINNET
+        WBTC_MAINNET,
+        CCDAO_MAINNET
     ],
     [ChainId.GOERLI]: [
         WRAPPED_NATIVE_CURRENCY[ChainId.GOERLI],
@@ -50,7 +51,7 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
         USDT_OPTIMISM_GOERLI,
         WBTC_OPTIMISM_GOERLI
     ],
-    [ChainId.POLYGON]: [USDC_POLYGON, WETH_POLYGON, WMATIC_POLYGON],
+    [ChainId.POLYGON]: [CCDAO_POLYGON, USDC_POLYGON, WETH_POLYGON, WMATIC_POLYGON],
     [ChainId.POLYGON_MUMBAI]: [
         DAI_POLYGON_MUMBAI,
         WRAPPED_NATIVE_CURRENCY[ChainId.POLYGON_MUMBAI],
